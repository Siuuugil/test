202107055 성*우
그림 맞추기에 있는 삼각형도 사각형 처리를 해야 하고, 삼각형 안의 원이나
문도 처리를 할때 별도 처리를 해야하기 때문에 생각보다 복잡할 수 있습니다.
각 도형을 하나씩 먼저 처리하는 형태로 구현하고, 나중에 합쳐서 처리를 해야
혼동이 덜 올 수 있습니다.

202107046 심*수
게임 룰이 상당히 복잡하던데... 해당 룰에 맞추어 프로그램을 작성하는 부분이
조금 복잡할 것같고, 나머지는 게임 룰에 따른 구현이므로 크게 복잡하지 않을듯 합니다.
대신 2명의 플레이어가 게임을 할 수 있도록 구성하고, 게임 룰에 따라 계산되는
정보를 화면에 출력해주기 바랍니다.

202107057 윤*준
게임 설계는 잘 되어 있는데 골을 차는 방향이나 세기 등을 잘 구현해야 큰 문제가
없을 것으로 보입니다. 추가적으로 몇골을 넣어야 하는지 남은 골은 몇 골인지 등에
대한 정보를 출력하기 바랍니다.

202307064 이*훈
단순한 게임들이긴 하지만 단계별로 처리해야하는 부분이 달라지기 때문에 구분에
대해 처리를 잘하면 사용자 입력은 문제가 없을 것 같습니다. 게임을 다 이해하지는
못했는데, 마지막 단계는 뭔가 추가적인 어려움이 있어야 게임처럼 보일 것 같습니다.

202107047  임*용
길게 눌러야하는 것은 당연히 구현이 가능합니다. 그런데 확인해봐야 하는 것은
길게 누르고 있는 시점에 다른 키를 눌렀을 때, 어떤 식으로 정보가 들어오는지에
대해 확인해야 합니다. 그리고 긴 노트를 누르고 있는 중인지 확인은 KEYDOWN에서
KEYUP이 발생했는지를 확인하고 있으면 됩니다.

202107038 정*주
구성은 크게 어렵지는 않을 것 같지만, 각 타워와 몹들이 모두 스레드로 구성되어
있어야 하기 때문에 동기화 맞추는 부분이 생각보다 어려울 것입니다.
구성되어 있는 길을 따라가는 것을 먼저 구현하고, 공격에 대한 부분들을 추가하는
형태로 검은색 하나와 몬스터를 하나씩 만들어놓고 테스트하면서 늘리는 것을
추천합니다.

202107058   조*현
기본 게임을 응용하는 것은 좋은데 스테이지 별로 달라져야하는 부분이 필요합니다.
그리고, 기본 소스가 제공되어 있는 상태에 과제까지 진행하였기 때문에 수업 시간에
진행한 내용보다는 많은 재미와 기능이 들어가야 합니다.

202307036 최*은
항상 공이 튀고 있는 형태로 구성하려면 스레드 동작이 가장 좋은데, 스레드를 사용하지
않으려면 타이머 등을 이용하여 항상 정보를 변경해주는 처리가 필요합니다.
적이 존재하지 않는 게임으로 보이는데, 간단한 퍼즐을 추가하는 것이 좋을 것 같습니다.

201907038 강*범
첫번째 질문은 너무 많은 내용이 필요한데 간단하게 설명하면 원하는 먹이는 숫자로 구현하고
해당 숫자에 대한 값을 입력으로 받으면 됩니다. 펫으로 만드는 것도 구현하는 방법에 따라
달라지기 때문에 너무 광범위한 질문이네요. 게임을 어떤 식으로 구현하고 싶은 건지 정확하게
확인이 안되므로 별도 확인이 필요할 것 같습니다.

202107068 강*솔
카드의 합이 같을 때라는 부분이 이해가 되지 않으며, 눌렀을때 값이 출력되면 해당 카드에
대한 값은 알 수 있는데 합이 같다는 의미가 무엇인지 모르겠네요. 일단 간단히 의미는
이해되는데 세부사항이 없어 답변하기가 어렵네요.

202407049 권*영
오목은 2개의 배열을 이용하여 화면을 구성해야 하기 때문에 생각보다 복잡합니다.
승리 조건은 대각선과 가로, 세로에 대해 배열이 같은 값을 가지고 있는 경우에
승패 확인이 가능합니다. 당연히 배운 범위를 응용하면 오목 구조 자체는 쉽게 구현이
가능합니다. 2개 배열이 이해되지 않으면 따로 물어보세요.

202337006 김*원
채보를 만들고 싶다면 비트나 가사에 맞추어 작성하는 것이 가장 편합니다.
이때 실제로 내가 눌러야 하는 시점보다 노트가 위에서 시작되는 시간이 빠르게
설정되어야 합니다. 즉, 위에서 떨어지는 노트의 속도에 따라 몇초 전에 노트가
생성되어야 하는지를 계산해서 출력해줘야 합니다.

202307052 김*길
당연히 원할 때 카드 제출이 가능합니다. 특수 효과가 무엇이냐에 따라 다르긴 한데...
게임 구성 자체가 간단하기 때문에 블루마블과 같은 형태로 변경하고, 게임의
컨셉을 그대로 가져가서 각 칸마다 다른 이벤트가 발생하도록 하는 것이 보다
재미 있는 게임과 구현이 될 것 같습니다.

202307053 김*빈
원 안에 그리는 방법은 좌표를 계산해서 항상 해당 위치에 그리도록 구성하면 됩니다.
게임 판 자체를 배열로 보고 처리하는 것이 말을 잡는 다거나 이동한다거 하는 처리가
편합니다. 이미지 변경은 bitblit 함수를 이용합니다. 새로운 말을 선택하거나 이미
보드에 있는 말을 클릭하는 것으로 선택시키고, 선택하면 해당 위치로 이동시키세요.
꺽이는 위치에서는 사용자에게 물어보는 것이 좋습니다. 말을 이동하는 것이 아니라
보드 위에 말은 더 이상 사용하지 않고, 나간 말의 개수를 증가시키면 됩니다.
당연히 수업 시간에 배운 것으로 처리 가능한데... 알고리즘과 코드가 생각보다 복잡할
수 있으니 생각 많이 하길 바랍니다.

202337021 김*정
기본 게임의 변형인데 상대를 스레드로 구성하도록 하고, 아이템 개수를 체크하는 부분과
상대 객체가 여러 개로 구성될 경우 어떻게 전략적으로 이동할 것인지를 잘 생각해서
작성하기 바랍니다. 화면 구성은 마음에 듭니다.

202307054 김*비
버튼 클릭으로 화면 열기 닫기는 이미 해당 위치에 관련된 정보를 모두 그리도록 구성하되
표시를 할 것인지를 결정하는 것이 하나의 방법이고, 클릭 했을때 특정 위치에서 정보를
출력하도록 구성하는 것이 더 편할 수 있습니다. 화면 이동을 하는 것도 동일하게 현재
출력되고 있는 것을 모두 표시하지 않고, 다른 화면의 객체를 모두 그리도록 구성하면 됩니다.
게임 자체는 괜찮은데, 구현이 생각보다 어려울 수 있으므로 한 화면에서 처리하는 것을 고려하기 바랍니다.

202307058 김*민
유닛 배치는 배열을 이용하면 됩니다. 경로는 대부분의 디펜스 게임이 그렇듯 경로가 정해지기
때문에 배열 위치를 지정하거나 지정한 경로대로 천천히 이동하도록 구성하면 됩니다.
업그레이드는 해당 위치의 값을 변경하는 것으로 간단히 변경이 가능한데, 너무 복잡하게 생각하면
어렵습니다. 공격 범위는 수업 시간에 이야기한 것과 같이 보이지 않는 큰 좌표를 가지고 처리하면
됩니다.

202003113 김*환
알고리즘이 필요한 프로젝트입니다. 기준이 되는 사각형을 이용하여 들어갈 수 있는지 여부를 결정하면
되는데, 어떻게 보면 매우 어려울 수 있고, 쉽게 생각하면 쉽게 처리할 수 있습니다. 가능하면 게임 클리어
조건을 모두 확인하고 게임을 설계하기 바랍니다. 초급모드는 없애고, 고급모드로 스테이지를 여러개
만드는 것을 추천합니다.

202107008 박*호
설계 자체는 다 되어 있는 것 같은데, 설명되어 있는 것처럼 되어 있다면 의미가 거의 없을 것 같네요.
적들도 이동이 가능하도록 설정하는 것이 좋겠고, 총알 같은 경우는 수업 시간에 이야기한 내용을
기반으로 작성하면 될 것 같습니다. 적들이 이동하고 공격하려면 스레드를 사용해야 합니다.

202307068 박*별
게임 자체에 대한 설명이 부족해서 정확하게는 이해하지 못했으나 마우스가 이동할 때 좌표를 항상
계산하고 있어야 하는 부분과 4번의 그림이 마우스 이동인 것 같은데 마우스가 해당 도형 내에서
이동하고 있는지 여부를 확인하는 것은 일반적인 겹침 처리로는 진행되지 않으니 생각을 많이
해야 할 것입니다.

202007066 방*희
디펜스 게임인 것은 알겠는데, 정확하게 게임이 어떻게 진행되는지에 대해서는 잘 모르겠군요.
화면에는 하나씩만 존재하는데, 여러 개가 나오는 경우도 있어야 할 것이고, 골드와 타워 및
기술 등에 따라 처리해야 하는 부분이 약간 복잡할 수 있습니다.

202014032 안*우
1,2,3번 모두 수업 시간에 이야기 했던 화면이 이동하는 것이 아니라 객체의 좌표와 배경 그림이
이동하는 것을 응용하면 처리됩니다. 스레드로 구성하면 자동차들의 속성(속도) 등을 다르게
줄 수 있습니다.

202002056 오*호
게임을 찾아봤는데 해당 게임을 어느 정도 구현은 가능하겠으나 리듬 게임이기 때문에 생각보다
처리가 복잡할 수 있으나, 그린 화면처럼 단순화하면 어느 정도 구현이 가능할 것 같습니다.
이때 2차원 배열이 변경되는 것을 잘 처리하려면 정사각 배열로 만드는 것을 추천합니다.

202114044 위*영
오래전에 수업 시간에 선배가 제출한 게임이네요. 사각형은 배열을 이용하고, 연산은 배열의
인덱스를 이용하면 크게 문제 없을 것이고, 방향키를 이용하여 좌,우,상,하를 처리할 때
2차원 배열의 인덱스를 잘 처리하면 될 것 같습니다. 타일이 병합되는 과정을 순서대로
보여주면 더 좋을 것 같습니다.

202307042 윤*래
원의 형태로 구성되어 있는 부분을 객체가 이동하기 위해서는 수학적인 연산을 필요로 합니다.
수학 함수들을 잘 찾아보기 바라고, 수학 함수 사용이 어려운 경우는 위치 좌표를 고정하고
이동시키거나 원 대신 사각형 형태로 이동시키는 것을 추천합니다.

202407001 윤*솔
게임 설명을 보고 정확하게 게임이 원하는 바를 이해하지는 못했으나, 일반적인 슈팅게임과
같다는 것은 알겠습니다. 스레드로 구성해야 원하는 형태로 동작할 것이고, 패턴이 일정한
형태로 구성하면 보스 구성은 그래도 큰 어려움이 없을 것으로 판단됩니다.

202107013 이*민
게임이 너무 단순해질 수 있거나 단순한 형태로 보입니다. 캐릭터가 이동하지 않은 상태에서
보스 공격을 받을 경우 회피 등이 불가능하기 때문입니다. 그래서 구성이 맞는 것인지는
잘 모르겠군요. 구성해보고 질문하세요.

202007060 이*환
게임은 2차원 배열로 구성하면 되고, 흑이면 1/백이면 2/ 빈 칸이면 0으로 설명하면 편합니다.
종료 조건은 모든 배열 탐색에서 0이 발견되지 않으면 종료입니다. 가로, 세로, 대각선으로
0이 아닐때까지 확인하면서 뒤집으면 됩니다. 전체 돌 개수와 1 또는 2의 개수가 동일하면
종료 조건입니다. 그래픽은 이미지를 직접 구하거나 그려서 하나하나 바꿔가면서 화면에
출력하도록 bitblit 함수를 쓰면 됩니다. 순서 지정은 대부분 흑돌부터 아닌가요? 구현은
플레이어 VS. 플레이어가 쉽습니다. 컴퓨터로하면 힘들거에요

202114062 이*운
스페이스 바를 누른 상태가 되면 나의 상태가 무적 상태가 되도록 설정하면 됩니다.
예를 들어 나의 상태 = 1은 일반 상태이고, 무적 상태는 2로 설정해서 충돌 처리할 때
나의 상태가 2라면 충돌 점검을 하지 않으면 됩니다. 수업 시간에 했던거 같은데.....

202307063 임*섭
적들이 뭉쳐지지 않도록 구성하는 것이 중요합니다. 먹은 개수를 세고 있다가 화면에
있는 점의 개수와 동일하면 종료 조건이겠죠. 2차원 배열로 맵을 만들었을때 이동 가능
불가능 위치 확인이 편합니다. 반대로 화면을 전체 좌표로 가지고 있다면 이동 불가능한
지역 확인이 쉬워집니다. 잘 선택하길 바랍니다.